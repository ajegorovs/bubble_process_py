0) take a note of bubble flow directions on images. our method is designed for right-to-left flow.
1) launch VS project
2) 	modify mainXFolder as r'.\folderName' 
	modify mainOutputSubFolders as ['fieldOff','sccm100']
3) set image archive parameters. this will shorten execution time if code restarts/testing is needed:
	set exportArchive = 1 for first run, change it later to 0 to skip generation.
	startFrom  	- image link list index (we set 1 to skip first frame)
	numImages 	- self explain.
	postfix 	- image array (archive) will have to postfix so you can run different subSets for each project
4) set tracing parameters:
	dataStart	- index from which array iteration begins
	dataNum 	- will be min(array length, dataNum), since you might set smaller archive
	assistFramesG   - if assist is on, frame will be generated on a global w.r.t archive time steps.
	readIntermediateData - enables restarting from latest checkpoint if is enabled. also globals like assist.
3) launch, folders will be created
4) you will see prompt "No files inside directory, copy them and press any key to continue..."
5) copy bmp images into inputImageFolder (mainInputFolder=>mainOutputSubFolders[0]=>mainOutputSubFolders[1]=> ..)
6) specify rotateImageBy value: -1 = no rotation or cv2.ROTATE_XXX, see comment
7) you will see "No crop mask in {mainManualMasksFolder} folder!, creating mask : {cropMaskName}.png" "modify..."
8) image will be generated in folder {mainManualMasksFolder}, which is not inside specific project folder
9) draw red filled rectangle on image e.g fieldOff-sccm100-crop.png, images will be cropped to that rectangle.
	image will be cropped, than rotated, so your crop mask is working as intended.

